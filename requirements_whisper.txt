# DevDollz: Atelier Edition - Whisper System Dependencies
# Revolutionary breath-to-code development with Pylint integration
# 
# Python dependencies for the telepathic development experience
# Author: Alexis Adams
# Brand: DevDollz: Atelier Edition - Whisper System

# Core Whisper System
pylint>=2.17.0
aiosmtplib>=2.0.0

# Enhanced TUI Framework
textual>=0.40.0

# AI Integration
ollama>=0.1.0

# Voice Recognition (for traditional commands)
SpeechRecognition>=3.10.0
PyAudio>=0.2.11

# Enhanced CLI (fallback)
prompt_toolkit>=3.0.0
pygments>=2.10.0

# Database
sqlite3  # Built-in with Python

# Standard Library (included with Python)
# multiprocessing
# json
# os
# time
# datetime
# importlib.util
# concurrent.futures
# asyncio
# pathlib
# typing
# dataclasses
# io
# re

# Development Tools
black>=23.0.0  # Code formatting
flake8>=6.0.0  # Linting
mypy>=1.0.0    # Type checking

# Optional: Enhanced Development Experience
rich>=13.0.0
typer[all]>=0.9.0

# Optional: Additional AI Models
openai>=1.0.0
anthropic>=0.7.0

# Optional: Enhanced Terminal Support
colorama>=0.4.6

# Optional: Testing
pytest>=7.0.0
pytest-asyncio>=0.21.0

# Installation Notes:
# 
# 1. Core Whisper System:
#    pip install pylint aiosmtplib
#
# 2. Enhanced Atelier Experience:
#    pip install textual prompt_toolkit pygments ollama
#
# 3. Voice Recognition (optional):
#    pip install SpeechRecognition PyAudio
#
# 4. Development Tools:
#    pip install black flake8 mypy
#
# 5. Testing:
#    pip install pytest pytest-asyncio
#
# The Whisper System will automatically:
# - Calibrate to your pulse and breath patterns
# - Manifest your thoughts into Pylint-clean code
# - Generate async-ready, production-ready Python
# - Apply DevDollz branding and signatures
# - Store all whisper results in persistent memory
#
# Experience the future of development:
# python whisper_core.py
